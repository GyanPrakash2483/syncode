{
  "version": 3,
  "sources": ["../../src/codespace/Codespace.ts", "../../src/codespace/File.ts"],
  "sourcesContent": ["import SyncodeFile from \"./File.js\";\nimport crypto from \"node:crypto\"\n\nfunction generateCodespaceId() { \n  return crypto.randomBytes(16).toString('base64url');\n}\n\nclass Codespace {\n  codespaceId: string = \"\"\n  files: SyncodeFile[] = [];\n\n  constructor() {\n    this.codespaceId = generateCodespaceId();\n    const welcomeFile = new SyncodeFile(\"welcome.txt\", `\n      Welcome to Syncode\n      Start by creating a new file  \n    `)\n    this.files.push(welcomeFile);\n    const licenseFile = new SyncodeFile(\"license.txt\", `\n      License\n      No naughty!\n    `)\n    this.files.push(licenseFile);\n    const codeFile = new SyncodeFile(\"src/index.js\", `\n      console.log(\"Hello, World!\");\n    `)\n    this.files.push(codeFile);\n  }\n\n  updateFile(filename: string, content: string) {\n    const existingfile = this.files.find((file) => file.filename === filename);\n\n    if(existingfile) {\n      existingfile.content = content;\n    } else {\n      const newFile = new SyncodeFile(filename, content);\n      this.files.push(newFile);\n    }\n  }\n\n}\n\nexport default Codespace", "class SyncodeFile {\n  filename: string = \"/newfile\";\n  content: string = \"\"\n\n  constructor(filename: string, content: string) {\n    this.filename = filename;\n    this.content = content;\n  }\n\n  updateContent(newcontent: string) {\n    this.content = newcontent;\n  }\n\n}\n\nexport default SyncodeFile"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAM,cAAN,MAAkB;AAAA,EAChB,WAAmB;AAAA,EACnB,UAAkB;AAAA,EAElB,YAAY,UAAkB,SAAiB;AAC7C,SAAK,WAAW;AAChB,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,cAAc,YAAoB;AAChC,SAAK,UAAU;AAAA,EACjB;AAEF;AAEA,IAAO,eAAQ;;;ADdf,yBAAmB;AAEnB,SAAS,sBAAsB;AAC7B,SAAO,mBAAAA,QAAO,YAAY,EAAE,EAAE,SAAS,WAAW;AACpD;AAEA,IAAM,YAAN,MAAgB;AAAA,EACd,cAAsB;AAAA,EACtB,QAAuB,CAAC;AAAA,EAExB,cAAc;AACZ,SAAK,cAAc,oBAAoB;AACvC,UAAM,cAAc,IAAI,aAAY,eAAe;AAAA;AAAA;AAAA,KAGlD;AACD,SAAK,MAAM,KAAK,WAAW;AAC3B,UAAM,cAAc,IAAI,aAAY,eAAe;AAAA;AAAA;AAAA,KAGlD;AACD,SAAK,MAAM,KAAK,WAAW;AAC3B,UAAM,WAAW,IAAI,aAAY,gBAAgB;AAAA;AAAA,KAEhD;AACD,SAAK,MAAM,KAAK,QAAQ;AAAA,EAC1B;AAAA,EAEA,WAAW,UAAkB,SAAiB;AAC5C,UAAM,eAAe,KAAK,MAAM,KAAK,CAAC,SAAS,KAAK,aAAa,QAAQ;AAEzE,QAAG,cAAc;AACf,mBAAa,UAAU;AAAA,IACzB,OAAO;AACL,YAAM,UAAU,IAAI,aAAY,UAAU,OAAO;AACjD,WAAK,MAAM,KAAK,OAAO;AAAA,IACzB;AAAA,EACF;AAEF;AAEA,IAAO,oBAAQ;",
  "names": ["crypto"]
}
